/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  PomodoroTimer as PrismaPomodoroTimer,
  TodoItem as PrismaTodoItem,
} from "@prisma/client";

export class PomodoroTimerServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PomodoroTimerCountArgs, "select">
  ): Promise<number> {
    return this.prisma.pomodoroTimer.count(args);
  }

  async pomodoroTimers(
    args: Prisma.PomodoroTimerFindManyArgs
  ): Promise<PrismaPomodoroTimer[]> {
    return this.prisma.pomodoroTimer.findMany(args);
  }
  async pomodoroTimer(
    args: Prisma.PomodoroTimerFindUniqueArgs
  ): Promise<PrismaPomodoroTimer | null> {
    return this.prisma.pomodoroTimer.findUnique(args);
  }
  async createPomodoroTimer(
    args: Prisma.PomodoroTimerCreateArgs
  ): Promise<PrismaPomodoroTimer> {
    return this.prisma.pomodoroTimer.create(args);
  }
  async updatePomodoroTimer(
    args: Prisma.PomodoroTimerUpdateArgs
  ): Promise<PrismaPomodoroTimer> {
    return this.prisma.pomodoroTimer.update(args);
  }
  async deletePomodoroTimer(
    args: Prisma.PomodoroTimerDeleteArgs
  ): Promise<PrismaPomodoroTimer> {
    return this.prisma.pomodoroTimer.delete(args);
  }

  async getTodoItem(parentId: string): Promise<PrismaTodoItem | null> {
    return this.prisma.pomodoroTimer
      .findUnique({
        where: { id: parentId },
      })
      .todoItem();
  }
}
